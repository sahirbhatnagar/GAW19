\documentclass{article}
\usepackage[parfill]{parskip} % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{amssymb} %math symbols
\usepackage{amsmath,amsthm,amssymb} %math stuff
\usepackage{mathrsfs}
\usepackage[margin=0.1in]{geometry}
\usepackage{fullpage}
\usepackage{comment}
\usepackage{ctable}
\usepackage{caption}
\usepackage{subfig}
\usepackage{epstopdf}
\usepackage{setspace} %Spacing
\usepackage{graphicx,graphics}
\usepackage{booktabs,tabularx}
\usepackage{enumerate}
\usepackage{makecell}
\usepackage{xfrac}
\usepackage[latin1]{inputenc}
\usepackage{tikz}
\usepackage{placeins}
\usetikzlibrary{trees}
\usepackage{listings} 
\lstloadlanguages{R} 
\lstset{language=R,basicstyle=\smaller[2],commentstyle=\rmfamily\smaller, 
  showstringspaces=false,% 
  xleftmargin=4ex,literate={<-}{{$\leftarrow$}}1 {~}{{$\sim$}}1} 
\lstset{escapeinside={(*}{*)}}   % for (*\ref{ }*) inside lstlistings (Scode) 
%\usepackage[usenames,dvipsnames]{pstricks}
%\usepackage{epsfig}
%\usepackage{pst-grad} % For gradients
%\usepackage{pst-plot} % For axes


\begin{document}
<<load_data, cache=TRUE, echo=TRUE,eval=TRUE>>=
setwd("~/git_repositories/GAW19/data/")
DT.frq <- as.data.table(read.table("chr21.frq", header=TRUE))
DT.hwe <- as.data.table(read.table("chr21.hwe", header=TRUE))
setkey(DT.hwe,SNP)
#setkey(DT.hwe,NULL)
setkey(DT.frq, SNP)
DT.all <- DT.hwe[TEST=="ALL"][DT.frq]
DT.all[,log10p:=-log10(P)]
DT.all[,plot(MAF,log10p)]
#rm(DT.all)

DT.all <- cbind(DT.frq,DT.hwe["ALL"])
DT.all[,log.expect.p:=-log10((1:nrow(DT.all)-0.5)/nrow(DT.all))]
DT.all[,log.sorted.p:=-log10(sort(P))]

#data for founders only
DT.frq.found <- as.data.table(read.table("founders.frq", header=TRUE))
DT.hwe.found <- as.data.table(read.table("founders.hwe", header=TRUE))
setkey(DT.hwe.found,SNP)
setkey(DT.frq.found,SNP)
DT.all.found <- DT.hwe.found[TEST=="ALL"][DT.frq.found]
DT.all.found[MAF!=0][,plot(MAF,-log10(P))]

DT.all.found[,log10p:=-log10(P+1e-10)]
DT.all.found[,plot(MAF,log10p)]


plot(DT.all.found[,"log10p", with=FALSE])


DT.all.found[,log.expect.p:=-log10((1:nrow(DT.all.found)-0.5)/nrow(DT.all.found))]
DT.all.found[,log.sorted.p:=-log10(sort(P))]


DT.tdt.every.affect <- as.data.table(read.table("everyone_affected.tdt", header=TRUE))
setkey(DT.tdt.every.affect,SNP)
DT.tdt.switch <- as.data.table(read.table("switch_pheno.tdt", header=TRUE))
setkey(DT.tdt.switch,SNP)
@

\section{Preliminary Plots}


<<1a, message=FALSE, echo=FALSE,fig.cap='Histograms of Minor Allele Frequency', fig.align='center', fig.show='asis', fig.subcap=c('Everyone','Founders Only'), out.width='.49\\linewidth'>>=
DT.frq[,hist(MAF)]
DT.frq.found[,hist(MAF)]
@


<<2a, message=FALSE, echo=FALSE,fig.cap="$-\\log_{10}$(p-value of HWE) vs. Minor Allele Frequency", fig.align='center', fig.show='asis', fig.subcap=c('Everyone','Founders Only'), out.width='.49\\linewidth'>>=
DT.all[,plot(MAF,-log10(P))]
DT.all.found[,plot(MAF,-log10(P))]
@


<<3a, message=FALSE, echo=FALSE,fig.cap='Q-Q Plot of HWE', fig.align='center', fig.show='asis', fig.subcap=c('Everyone','Founders Only'), out.width='.49\\linewidth', fig.keep='high'>>=
DT.all[,plot(log.expect.p,log.sorted.p)]
abline(a=0,b=1)
DT.all.found[,plot(log.expect.p,log.sorted.p)]
abline(a=0,b=1)
@


\FloatBarrier

\section{TDT results}

<<tdt_manhattan,out.width='.49\\linewidth',fig.cap='Manhattan Plots from TDT', message=FALSE, echo=FALSE, fig.align='center', fig.subcap=c('Everyone affected','Affected changed to missing and Unaffected changed to Affected')>>=
manhattan(DT.tdt.every.affect)
manhattan(DT.tdt.switch)
@


<<tdt_qq,out.width='.49\\linewidth', message=FALSE, echo=FALSE, fig.align='center', fig.subcap=c('Everyone affected','Affected changed to missing and Unaffected changed to Affected'),fig.cap='Q-Q PLots from TDT'>>=
qq(DT.tdt.every.affect$P, main="Q-Q plot of TDT p-values")
qq(DT.tdt.switch$P, main="Q-Q plot of TDT p-values")
@





\end{document}